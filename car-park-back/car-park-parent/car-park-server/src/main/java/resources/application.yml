spring:
  profiles:
    active: dev


  security:
    oauth2:
      client:
        registration:
          github:
            clientId: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth2/code/github
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth2/code/google
          gitee:
            clientId: ${GITEE_CLIENT_ID}
            clientSecret: ${GITEE_CLIENT_SECRET}
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth2/code/gitee
            scope:
              - user_info
              - emails
            provider: gitee
        provider:
          gitee:
            authorizationUri: https://gitee.com/oauth/authorize
            tokenUri: https://gitee.com/oauth/token
            userInfoUri: https://gitee.com/api/v5/user
            userNameAttribute: login


  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/car_park?serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    type: com.alibaba.druid.pool.DruidDataSource



  data:
    redis:
      host: 127.0.0.1
      port: 6379

# application.yml
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

aliyun:
  oss:
    endpoint: ${OSS_ENDPOINT}
    bucketName: ${OSS_BUCKET_NAME}
    region: ${OSS_REGION}


mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
